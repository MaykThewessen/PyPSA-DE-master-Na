# Complete full-year Germany-only PyPSA simulation

# SPDX-FileCopyrightText: : 2017-2024 The PyPSA-Eur Authors
#
# SPDX-License-Identifier: CC0-1.0

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#top-level-configuration
version: 0.35.1
tutorial: false

logging:
  # level: DEBUG
  level: INFO
  format: '%(levelname)s:%(name)s:%(message)s'

private:
  keys:
    entsoe_api:

remote:
  ssh: ""
  path: ""

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#run
run:
  prefix: ""
  name: "de-all-tech-2035-mayk"
  scenarios:
    enable: false
    file: config/scenarios.yaml
  disable_progressbar: false
  shared_resources:
    policy: false
    exclude: []
  shared_cutouts: true

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#foresight
foresight: overnight

# Enable transmission projects for complete simulation
transmission_projects:  # Section for configuring transmission network expansion projects
  enable: true          # Master switch to enable/disable transmission project processing
  include:              # Specify which types of transmission projects to include
    tyndp2020: true     # Tyndp2020 is the transmission network expansion plan for 2020
    nep: true           # NEP is the new energy plan for 2035
    manual: true        # Manual is the manual transmission network expansion plan for 2035
  status:               # List of project statuses to include in the simulation
  - under_construction  # Include projects currently being built
  - in_permitting      # Include projects in the permitting phase
  - confirmed          # Include projects that are confirmed but not yet started
  skip: []              # List of project IDs to skip
  new_link_capacity: "zero"  # Whether to keep existing link capacity or set to zero (options: "keep" or "zero")

# High-performance solver settings using HiGHS
solving:                # Configuration for the optimization solver
  solver:               # Solver selection and configuration
    name: highs         # Use HiGHS solver (high-performance open-source solver)
    options: highs-highperf  # Reference to custom solver options defined below
  
  solver_options:       # Custom solver parameter configurations
    highs-highperf:     # Named configuration set for high-performance settings
      threads: 36       # Increase number of parallel threads for the solver (use all available cores if possible)
      # solver: auto-selected by HiGHS - let solver choose IPM or Simplex based on problem characteristics
      # run_crossover: auto-selected by HiGHS - let solver decide crossover strategy
      small_matrix_value: 1e-5  # Minimum threshold for matrix values
      large_matrix_value: 1e9   # Maximum threshold for matrix values
      primal_feasibility_tolerance: 1e-4  # Loosen tolerance for primal feasibility (faster, but may reduce accuracy)
      dual_feasibility_tolerance: 1e-4    # Loosen tolerance for dual feasibility
      ipm_optimality_tolerance: 1e-3      # Loosen optimality tolerance for faster convergence
      parallel: "on"    # Enable parallel processing
      random_seed: 123  # this makes sure to use same random numbers every time script is run
      presolve: "on"    # Enable presolve to reduce problem size and speed up solving
      time_limit: 18000  # Set a time limit (in seconds) for the solver (5 hours)
  # Set memory limit to
  mem_mb: 60000         # Memory limit in megabytes (60GB)
  
  # Additional solving options for full simulation
  options:               # General solving behavior options
    clip_p_max_pu: 1.e-2   # Ensures that any per-unit generation capacity values (p_max_pu) smaller than 1×10⁻² are clipped (set to that minimum).
    load_shedding: false    # If true, PyPSA would allow demand to be unmet at a high penalty cost; here, the model must meet all demand.
    curtailment_mode: false # If true, the simulation focuses on curtailment analysis rather than cost-optimal dispatch.
    noisy_costs: true       # Adds small random noise to technology costs to break symmetry. Useful to prevent the solver from splitting capacity equally among identical assets in different buses just because they have exactly equal costs.
    skip_iterations: true   # PyPSA-Eur often solves iteratively (e.g., adjusting transmission expansion, capacity factors, or other variables between runs).
    rolling_horizon: false  # If true, the model would solve smaller time windows sequentially (mimicking operational foresight limits).
    seed: 123               # Random number seed for reproducibility when using stochastic elements (e.g., noisy_costs).
    track_iterations: false # If true, stores intermediate results from iterative solves.
    min_iterations: 2       # Minimum number of iterations to perform
    max_iterations: 6       # Maximum number of iterations to perform
    transmission_losses: 2  # 2 means each transmission line has a 2% loss factor applied to High voltage grid power flow.
    linearized_unit_commitment: true  # Uses a linear approximation to unit commitment (on/off behaviour of generators) instead of full MILP.
    horizon: 365            # Number of days in the optimisation horizon.

# High-performance Atlite settings for 2023 weather data (consistent with snapshots)
atlite:                  # Configuration for weather data processing library
  nprocesses: 10         # Number of parallel processes for data processing
  cutout_directory: cutouts  # Directory to store processed weather data
  default_cutout: europe-2023-sarah3-era5  # Default weather dataset to use (matches snapshots year)
  show_progress: true    # Suppresses progress bars when generating cutouts — useful in batch runs or when running in logging environments.
  cutouts:               # Specific weather dataset configurations
    europe-2023-sarah3-era5:  # Named dataset configuration (consistent with snapshots)
      module: [sarah, era5]   # Use SARAH3 and ERA5 data sources
      x: [5., 16.]            # Focus on Germany coordinates (longitude range)
      y: [47., 56.]           # Focus on Germany coordinates (latitude range)
      dx: 0.3                 # Grid resolution in longitude (degrees)
      dy: 0.3                 # Grid resolution in latitude (degrees)
      time: ['2023', '2023']  # Time period for weather data (matches snapshots)

# Complete scenario setup
scenario:                # Configuration for different simulation scenarios
  simpl:
  - ''
  ll:
  - vopt
  clusters:              # List of clustering resolutions to test
  # - 10                 # 10 spatial nodes for higher resolution
  - 37
  #- 128
  #- 256
  opts:                  # Power sector options for each scenario
  - ''    # 'Co2L0.00'       # changed to: CO2 limit of 0.0% of 1990 emissions (very restrictive)''
  sector_opts:           # Sector coupling options for each scenario
  - ''                   # Empty means pure electricity-only model with no additional sector coupling.
  planning_horizons:     # Future years to simulate              
  # - 2020
  # - 2030
  # - 2040
  - 2035                #  Target year for the energy transition
  # - 2050

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#countries
countries:               # List of countries to include in the simulation
- DE                     # Germany country code

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#snapshots
snapshots:
  start: "2023-01-01"
  end: "2024-01-01"
  inclusive: 'left'

# Enable necessary data retrieval for complete simulation
enable:                  # Master switches for different data processing steps
  retrieve: auto
  prepare_links_p_nom: false
  retrieve_databundle: true
  retrieve_cost_data: false
  build_cutout: false
  retrieve_cutout: true
  custom_busmap: false
  drop_leap_day: true

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#co2-budget
co2_budget:
  2020: 0.701
  2025: 0.524
  2030: 0.297
  2035: 0.150 # total Energy system emissions, electricity + oil, gas, heat, etc
  2040: 0.071 
  2045: 0.032  
  2050: 0.000 

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#lines
lines:
  types:
    220.: "Al/St 240/40 2-bundle 220.0"
    300.: "Al/St 240/40 3-bundle 300.0"
    380.: "Al/St 240/40 4-bundle 380.0"
    500.: "Al/St 240/40 4-bundle 380.0"
    750.: "Al/St 560/50 4-bundle 750.0"
  s_max_pu: 0.7
  # Evidence-based technical limit: 4 GW double-circuit 380 kV line capacity
  # Source: ENTSO-E TYNDP 2022, BNetzA grid development plans  
  s_nom_max: &line_capacity_limit 4000  # MW - realistic upper bound for AC transmission lines
  # Conservative estimate accounting for thermal limits, N-1 security, German transmission corridors
  max_extension: *line_capacity_limit  # MW - align with single line capacity limit
  length_factor: 1.25
  reconnect_crimea: true
  under_construction: 'keep' # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity
  capital_cost: 200000  # EUR/MW*km for transmission lines
  dynamic_line_rating:
    activate: false
    cutout: europe-2023-sarah3-era5
    correction_factor: 0.95
    max_voltage_difference: false
    max_line_rating: false

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#links
links:
  p_max_pu: 1.0
  # Evidence-based technical limit: 6 GW bipolar HVDC link capacity
  # Source: NordLink/SuedOstLink scale plus engineering margin, ENTSO-E infrastructure data
  p_nom_max: &link_capacity_limit 6000  # MW - realistic upper bound for HVDC transmission links  
  # Based on: NordLink 1.4 GW, planned SuedOstLink 4 GW, engineering feasible upper bound 6 GW
  max_extension: *link_capacity_limit  # MW - align with single HVDC link capacity limit
  include_tyndp: true
  under_construction: 'zero' # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity
  length_factor: 1.25  # Add missing length_factor for DC links
  capital_cost: 400000  # EUR/MW*km for DC links

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#electricity
electricity:
  voltages: [220., 300., 330., 380., 400., 500., 750.]
  base_network: osm-prebuilt
  osm-prebuilt-version: 0.6
  gaslimit_enable: false
  gaslimit:        false
  co2limit_enable: true
  co2limit: 0.0         # electricity system has CO2-target of 0 emissions in 2035
  co2base: 1.487e+9

  operational_reserve:
    activate: false
    epsilon_load: 0.02
    epsilon_vres: 0.02
    contingency: 4000

  min_hours:
    iron-air: [100] # 100 hours is the minimum storage duration for iron-air battery, preferably 100 hours standard product. longer is always possible due to easier power requirements.

  max_hours:
    battery: 12
    H2: 100
    Vanadium-Redox-Flow: 12
    Compressed-Air-Adiabatic: 24
    iron-air: 100

  extendable_carriers:    # Technologies that can be expanded in the optimization
    Generator: [solar, solar-hsat, onwind, offwind-ac, offwind-dc, offwind-float]  # Generators that can be built
    StorageUnit: []  # Storage types with fixed duration set by user
    Store: [battery, H2, iron-air, Vanadium-Redox-Flow, Compressed-Air-Adiabatic]        # Energy stores that can be built (hydrogen storage)
    Link: [battery inverter, electrolyser, fuel cell, Hydrogen-charger, Hydrogen-discharger, fuel-cell, iron-air battery charge, iron-air battery discharge]         # H2 pipeline



  storage_units_p_nom:
    # Country-wide storage capacity limits for Germany (MW)
    # Based on grid integration studies and technology deployment potential
    battery: &battery_country_limit 100000  # MW country-wide - large-scale battery deployment potential
    H2: 0.0
    Vanadium-Redox-Flow: 0.0
    Compressed-Air-Adiabatic: 0.0
    iron-air: 0.0

  storage_units_p_nom_extendable:
    battery:                  true
    H2:                       true
    Vanadium-Redox-Flow:      true
    Compressed-Air-Adiabatic: true
    iron-air:                 true
 


  powerplants_filter: (DateOut >= 2023 or DateOut != DateOut) and not (Country == 'Germany' and Fueltype == 'Nuclear')
  custom_powerplants: false
  everywhere_powerplants: []

  conventional_carriers: [nuclear, oil, OCGT, CCGT, coal, lignite, geothermal, biomass]
  renewable_carriers: [solar, solar-hsat, onwind, offwind-ac, offwind-dc, offwind-float, hydro]


  estimate_renewable_capacities:
    enable: true
    from_opsd: true
    year: 2023
    expansion_limit: false
    technology_mapping:
      Offshore: offwind-ac
      Onshore: onwind
      PV: solar


  autarky:
    enable: false
    by_country: false


# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#renewable
renewable:
  onwind:
    cutout: europe-2023-sarah3-era5
    resource:
      method: wind
      turbine: Vestas_V112_3MW
      add_cutout_windspeed: true
    capacity_per_sqkm: 3
    # correction_factor: 0.93
    corine:
      grid_codes: [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32]
      distance: 1000
      distance_grid_codes: [1, 2, 3, 4, 5, 6]
    luisa: false
      # grid_codes: [1111, 1121, 1122, 1123, 1130, 1210, 1221, 1222, 1230, 1241, 1242]
      # distance: 1000
      # distance_grid_codes: [1111, 1121, 1122, 1123, 1130, 1210, 1221, 1222, 1230, 1241, 1242]
    natura: true
    excluder_resolution: 100
    clip_p_max_pu: 1.e-2
  offwind-ac:
    cutout: europe-2023-sarah3-era5
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_2020ATB_5.5MW
      add_cutout_windspeed: true
    capacity_per_sqkm: 2
    correction_factor: 0.8855
    corine: [44, 255]
    luisa: false # [0, 5230]
    natura: true
    ship_threshold: 400
    max_depth: 60
    max_shore_distance: 30000
    excluder_resolution: 200
    clip_p_max_pu: 1.e-2
    landfall_length: 50  # Length of land cables in km to reach onshore grid
  offwind-dc:
    cutout: europe-2023-sarah3-era5
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_2020ATB_5.5MW
      add_cutout_windspeed: true
    capacity_per_sqkm: 2
    correction_factor: 0.8855
    corine: [44, 255]
    luisa: false # [0, 5230]
    natura: true
    ship_threshold: 400
    max_depth: 60
    min_shore_distance: 30000
    excluder_resolution: 200
    clip_p_max_pu: 1.e-2
    landfall_length: 50  # Length of land cables in km to reach onshore grid

costs:
  fill_values:
    FOM: 0
    VOM: 0
    efficiency: 1
    fuel: 0
    investment: 0
    lifetime: 25
    CO2 intensity: 0
    discount rate: 0.07
  year: 2035
  version: v0.6.1
  # To override parameters (e.g. from the database):
  # Use load_costs(defaults.config["costs"], config["costs"]["overwrites"])
  overwrites:
    # Fill in with your cost adjustments
    discount rate:  # Adjust for country-specific settings if needed
      biomass: 0.07
      solar: 0.05  # Lower risk premium for solar
      onwind: 0.05  # Lower risk premium for wind
      offwind: 0.07
      gas: 0.08  # Higher risk premium for gas
      coal: 0.08  # Higher risk premium for coal
      lignite: 0.08  # Higher risk premium for lignite
      oil: 0.08  # Higher risk premium for oil
      nuclear: 0.10  # Higher risk premium for nuclear
      
    capital_cost:  # Additional capital cost adjustments can be added here
      battery: 325000  # EUR/MW
      H2: 750000  # EUR/MW
